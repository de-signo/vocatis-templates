@* 
 *  Copyright (C) 2023 DE SIGNO GmbH
 *  
 *  This program is dual licensed. If you did not license the program under
 *  different terms, the following applies:
 *  
 *  This program is free software: You can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *  
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *  
 *@
@using iSign
@using Newtonsoft.Json
@using Stolltec.Forms.Model
@using Stolltec.Vocatis
@using Stolltec.Vocatis.Model
@using System.Linq
@using System.Web.Caching
@functions{
  IEnumerable<DisplayNumber> GetWaitQueueList(CommonGuidId id)
  {
    var cacheKey = String.Format("Vocatis_GetWaitQueueList_{0}", id);
    var list = Cache.Get(cacheKey) as IEnumerable<DisplayNumber>;
    if (list == null)
    {
      list = Vocatis.GetWaitQueueList(id);
      Cache.Add(cacheKey, list, null,
                DateTime.Now.AddSeconds(1), System.Web.Caching.Cache.NoSlidingExpiration, CacheItemPriority.Default, null);
    }
    return list;
  }
}
@{
  Response.ContentType = "application/json";
    
  var Model = new FormsModel(this);
  PageData["Model"] = Model;

  IEnumerable<DisplayNumber> list = new DisplayNumber[0];
  HashSet<CommonGuidId> ids = new HashSet<CommonGuidId>();
  var sources = Model.Style.StyleInstance.Where(f => f.Key.StartsWith("source"));
  foreach (var f in sources)
  {
    var id = (CommonGuidId)f.Value;
    if (id.IsEmpty || ids.Contains(id))
    {
        continue;
    }
    ids.Add(id);
    list = list.Concat(GetWaitQueueList(id));
  }
  var cats = (CommonGuidId[])Model.Style["highlightcat"].FieldInstance.Value ?? new CommonGuidId[0];
  var result = list.Select(x =>
    new {
      number = x.Number,
      room = x.RoomName,
      marked = x.Categories.Any(cid => cats.Contains(cid.Id))
    });
}
@Html.Raw(JsonConvert.SerializeObject(result))
