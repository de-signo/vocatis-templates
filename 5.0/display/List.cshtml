@using iSign
@using Stolltec.Forms.Model
@using Stolltec.Vocatis
@using Stolltec.Vocatis.Model
@using System.Web.Caching
@functions{
  IEnumerable<DisplayNumber> GetWaitQueueList(CommonGuidId id)
  {
    var cacheKey = String.Format("Vocatis_GetWaitQueueList_{0}", id);
    var list = Cache.Get(cacheKey) as IEnumerable<DisplayNumber>;
    if (list == null)
    {
      list = Vocatis.GetWaitQueueList(id);
      Cache.Add(cacheKey, list, null,
                DateTime.Now.AddSeconds(1), System.Web.Caching.Cache.NoSlidingExpiration, CacheItemPriority.Default, null);
    }
    return list;
  }
}
@{
    var Model = new FormsModel(this);
    PageData["Model"] = Model;
    var id = (CommonGuidId)Model.Style["source"].FieldInstance.Value;
    var cats = (CommonGuidId[])Model.Style["highlightcat"].FieldInstance.Value ?? new CommonGuidId[0];
    var list = GetWaitQueueList(id).Take(8);

    // the $.fn.vocatisList function requests the page to update the view
    // We minimize the overhead by just sending the required contents.
    var partial = Request["X-Requested-With"] == "XMLHttpRequest" || (Request.Headers != null && Request.Headers["X-Requested-With"] == "XMLHttpRequest");
    if (!partial)
    {
        Layout = "_Layout.cshtml";
    }
}
<table id="list"> 
    <tbody>
        @foreach (var x in list)
        {
            <tr>
                <td class="number">
                    @if (x.Categories.Any(cid => cats.Contains(cid.Id)))
                    {
                        <img src="termin.png" class="termin" alt="termin">
                    }
                    @x.Number
                </td>
                <td class="room">@x.RoomName</td>
            </tr>
            <tr class="spacer">
                <td colspan="2"></td>
            </tr>
        }
    </tbody>
</table>
