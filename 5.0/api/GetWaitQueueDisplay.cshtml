@* 
 *  Copyright (C) 2023 DE SIGNO GmbH
 *  
 *  This program is dual licensed. If you did not license the program under
 *  differnt tems, the following applies:
 *  
 *  This program is free software: You can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *  
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *  
 *@
@using Stolltec.Vocatis
@using Stolltec.Vocatis.Model
@using iSign
@{
    /// Usage:
    /// GetWaitQueueDisplay.cshtml?queue=1ed91152-e97c-47e3-aaa3-0dff73965004
    /// - queue (required) id of the queue to add a number
    try
    {
        Response.ContentType = "application/json";

        var queueid = CommonGuidId.FromString(Request["queue"]);
        IEnumerable<DisplayNumber> list;
        var voc = Vocatis.GetVocatisData();
        list = voc.GetWaitQueueDisplay(queueid);

        var data = from x in list select new {
            number = x.Number,
            iconUrl = x.IconUrl,
            categories = from c in x.Categories select new {
                name = c.Name,
                description = c.Description,
                color = c.Color
            },
            room = new {
                name = x.RoomName,
                description = x.RoomDescription
            }
        };
        Response.Write(Json.Encode(data));
    }
    catch (Exception ex)
    {
        Response.StatusCode = 500;
        <text>{ "message":@Html.Raw(Json.Encode(ex.Message)) }</text>
    }
}