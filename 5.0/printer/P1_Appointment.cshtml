@*
  Printer navigation level 1
  Select appointment
*@
@using System.Web.Optimization
@using System.Text.RegularExpressions
@using Stolltec.Forms.Model
@using Stolltec.Vocatis.Model
@using Stolltec.Vocatis
@using ISS.Session
@using iSign

@{
  var showQrCode = true;

  // Parse model
  var Model = new FormsModel(this);

  // setup layout
  PageData["model"] = Model;
  PageData["show_home"] = true;
  PageData["show_back"] = false;

  var partial = Request["X-Requested-With"] == "XMLHttpRequest" || (Request.Headers != null && Request.Headers["X-Requested-With"] == "XMLHttpRequest");
  if (! partial)
  {
    Layout = "PL_Layout.cshtml";
  }

  // Read request
  var s = Request["s"];
  var a = Request["a"];
  var tracking_id = (string)Model.Style["tracking_id"].Value;
  dynamic queueid = Model.Style["queueid_apt"].Value;
  dynamic catids = Model.Style["catid_apt"].Value;

  <div id="stages">
  @switch (s)
  {
    default:
    case "1":
        <img src="direction.png" alt="direction">
        <h1>Bitte scannen Sie den QR-Code aus Ihrer Terminbestätigung!</h1>
        <textarea id="scan" ></textarea>
      break;
    case "2":
      // Read data
      var re = new Regex("UID[:Ö]([0-9]*)");
      var m = re.Matches(a);
      dynamic entry = null;
      if (m.Count != 1)
      {
        <!-- code: @a -->
        <h2>Ungültiger QR-Code! Ist Ihr Termin heute?</h2>
        <p>Bitte scannen Sie den QR-Code aus ihrer aktuellen Terminbestätigung ein.</p>
      }
      else
      {
        var apt_id = m[0].Groups[1].Value;
        <!-- id: @apt_id -->
        entry = (from dynamic x in Model.DataSource("import")
                where String.Equals(x.id, apt_id)
                select x).FirstOrDefault();
        if (entry == null)
        {
          <h3>Ihr Termin wurde nicht in unserer Liste gefunden.</h3>
        }
        else
        {
          using (var voc = SessionInstancesModule.GetInstance().UseSharedInstance<IVocatisData>())
          {
            var ticket = voc.Instance.NewNumber(queueid, catids);
            ticket.Name = entry.name;
            ticket.Description = entry.time;
            voc.Instance.UpdateNumber(ticket);

            <img src="registration.png" id="registration" alt="registration" />
            <h3>Sie sind angemeldet</h3>
            <p>Bitte noch etwas Geduld, drucken oder scannen Sie Ihr Ticket und warten bis Ihre Nummer aufgerufen wird.</p>
            <div class="left">
              <p>Ticket drucken</p>
              <a class="print-button" href='@Href("PrinterTicket.cshtml", new { id=ticket.Id, tid=tracking_id })'><img src="printer.png" alt="Drucker"> </a>
            </div>
            if (showQrCode)
            {
              <div class="right">
                <p>Ticket scannen</p>
                <div class="qrcode" data-url="@Href("App.cshtml", new {id=ticket.Id, tracking_id})"></div>
              </div>
            }
          }
        }
      }
      break;
  }
  </div>
}

@if (! partial)
{
  <div id="loading" style="display: none;">
    <h3>Einen Moment, Ihr Code wird geprüft.</h3>
  </div>
  <script type="text/javascript">
    @* load site *@
    function hookupSite() {
      @* Qr code *@
      // make absolute  
      var a = document.createElement("a");
      a.href = $(".qrcode").data("url");
      $(".qrcode").qrcode({
        text: a.href,
        fill: '#706f6f',
        background: '#dadada'
      });

      @* Printing *@
      $(".print-button").unbind()
        .printTicket({
          legacy: false,
          printErrorTimeout: 60000,
          stripBody: false,
          beginPrint: function() {
            $("#waitPopup").show();
          },
          endPrint: function() {
            $("#waitPopup").hide();
            $("#takePopup").show();
            window.setTimeout(function() { $("#takePopup").hide(); }, 3000);
          },
          failPrint: function() {
            $("#waitPopup").hide();
          }
        });
    }
    @* scan logic *@
    function loadStage2(text) {
      $("#stages").html($("#loading").html());
      var url = '@Html.Raw(Model.Navigate("P1_Appointment.cshtml", new { s="2", a="--text--"}))';
      url = url.replace("--text--", encodeURI(text));
      $.ajax({
        url: url,
        cache: false
      }).done(function (result) {
        $("#stages").html($(result).html());
        hookupSite();
      });
    }
    @if (String.IsNullOrEmpty(s) && !String.IsNullOrEmpty(a))
    {
      <text>loadStage2('@Html.Raw(a.Replace("\n", "\\n").Replace("\r", "\\r"))');</text>
    }
    var timeoutHandle = null;
    $('#scan').on("keydown", function() {
      if (timeoutHandle) {
        window.clearTimeout(timeoutHandle);
      }
      timeoutHandle = window.setTimeout(function() {
        loadStage2($("#scan").val());
      }, 100);
    }).blur(function() {
      window.setTimeout(function () { $("#scan").focus(); }, 20);
    }).focus();
    hookupSite();

    $(document).ready(function () {
      reportPrinterStatus({
        url: "@Href(Stolltec.Forms.PrinterStatus.Path)",
        interval: 60000
      });
    });
  </script>
}