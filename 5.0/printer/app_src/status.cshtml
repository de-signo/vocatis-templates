@* 
 *  Copyright (C) 2023 DE SIGNO GmbH
 *  
 *  This program is dual licensed. If you did not license the program under
 *  different terms, the following applies:
 *  
 *  This program is free software: You can redistribute it and/or modify
 *  it under the terms of the GNU Affero General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *  
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU Affero General Public License for more details.
 *  
 *  You should have received a copy of the GNU Affero General Public License
 *  along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *  
 *@
@using iSign
@using Stolltec.Vocatis
@using Stolltec.Vocatis.Model
@using System.Web.Caching
@functions{
  string QueueNameCached(CommonGuidId id) {
    if (id.IsEmpty) return null;

    string key = "Vocatis_QueueName_" + id.ToString();
    string queueName = Cache.Get(key) as string;
    if (queueName == null)
    {
      var q = Vocatis.GetVocatisData().GetQueue(id);
      if (q != null)
      {
        queueName = q.Name;
        Cache.Add(key, queueName, null, DateTime.Now.AddHours(1), Cache.NoSlidingExpiration, CacheItemPriority.Default, null);
      }
    }
    return queueName;
  }
}
@{
  dynamic id = CommonGuidId.FromString(Request["id"]);
  var ticket = Vocatis.GetTicket(id);

  int position, estTimeOfCall;
  string roomName, queuename;
  if (ticket.State == WaitNumberState.Called) {
    var callInfo = Vocatis.GetTicketCallInfo(id);
    roomName = callInfo.RoomName;
    position = 0;
    estTimeOfCall = 0;
    queuename = "";
  }
  else {
    var status = Vocatis.GetTicketWaitInfo(id);
    roomName = "";
    position = status.Position;
    estTimeOfCall = (int)status.EstimatedTimeOfCall.TotalSeconds;
    queuename = QueueNameCached(status.QueueId);
  }

  Response.ContentType = "application/json";
}
{
  "number": "@Html.Raw(ticket.Number)",
  "title": "@Html.Raw(queuename)",
  "state": @((int)ticket.State),
  "position": @position,
  "estimatedTimeOfCall": @estTimeOfCall,
  "room": "@Html.Raw(roomName)"
}

