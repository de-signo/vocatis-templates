@using System.Threading.Tasks
@using System.Web.Mvc
@using iSign
@using Stolltec.Vocatis
@using Stolltec.Vocatis.Model
@{
 /*
    webservice for number generation
  */
  var queueid = CommonGuidId.FromString(Request["queue"]);
  var catids = GuidIdsFieldInstance.ParseValue("",Request["categories"]).Value as CommonGuidId[];
  var apt = Guid.Parse(Request["appointment"]);

  var number = Request["number"];
  var reference = Request["ref"];
  var name = Request["name"];
  var phone = Request["phone"];
  var postpone = Request["postpone"];

  var voc = Vocatis.GetVocatisData();

  // find / create the ticket
  var ticket = Task.Run(() => voc.NewNumberAsync(number, queueid, catids, apt)).GetAwaiter().GetResult();

  // set ticket data
  if (!String.IsNullOrEmpty(reference) || !String.IsNullOrEmpty(phone) || !String.IsNullOrEmpty(name)) {
    ticket.Name = name;
    ticket.Phone = phone;
    ticket.ReferenceId = reference;
    voc.UpdateNumber(ticket);
  }

  // postpone
  if (!String.IsNullOrEmpty(postpone) && ticket.State != WaitNumberState.Dismissed) {
    voc.PostponeNumber(ticket.Id, DateTime.Parse(postpone));
  }

  Response.ContentType="application/json";
}
{ 
  "id":"@ticket.Id",
  "number":"@ticket.Number"
}
