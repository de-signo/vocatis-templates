@using Stolltec.Vocatis
@using ISS.Session
@using iSign
@{
    /// Usage:
    /// GetTicket.cshtml?queue=1ed91152-e97c-47e3-aaa3-0dff73965004
    /// Parameters:
    /// - queue (required) id of the queue to add a number
    /// - cats (optional) comma separated list of category ids
    /// - name (optional) name to be stored with the number
    /// - desc (optional) description to be stored with the number
    /// - phone (optional) phone to be stored with the number
    /// - ref (optional) reference id to be stored with the number
    try 
    {
        Response.ContentType = "application/json";

        var queueid = CommonGuidId.FromString(Request["queue"]);
        var catids = (from x in (Request["cats"] ?? "").Split(',')
                      where !String.IsNullOrEmpty(x)
                      select CommonGuidId.FromString(x))
                      .ToArray();
        var name = Request["name"];
        var desc = Request["desc"];
        var phone = Request["phone"];
        var refid = Request["ref"];

        using (var voc = SessionInstancesModule.GetInstance().UseSharedInstance<IVocatisData>())
        {
            var ticket = voc.Instance.NewNumber(queueid, catids);
            ticket.Name = name;
            ticket.Description = desc;
            ticket.Phone = phone;
            ticket.ReferenceId = refid;
            voc.Instance.UpdateNumber(ticket);
            <text>{
                "id": "@ticket.Id.ToString()",
                "number": "@ticket.Number"
            }</text>
        }
    }
    catch (Exception ex)
    {
        Response.StatusCode = 500;
        <text>{ "message":@Html.Raw(Json.Encode(ex.Message)) }</text>
    }
}